import { useQuery } from "react-query";
import { ExtractFnReturnType, QueryConfig } from "@/lib/react-query";

import { {{properCase name}}Type } from "../types";
import { supabase } from "@/lib/initSupabase";

export const get{{properCase name}}s = async (): Promise<{{properCase name}}Type[]> => {
  const response = await supabase.from<{{properCase name}}Type>("{{dashCase name}}").select("*");

  return response.data ?? [];
};

type QueryFnType = typeof get{{properCase name}}s;

type Use{{properCase name}}sOptions = {
  config?: QueryConfig<QueryFnType>;
};

export const use{{properCase name}}s = ({ config }: Use{{properCase name}}sOptions = {}) => {
  return useQuery<ExtractFnReturnType<QueryFnType>>({
    ...config,
    queryKey: ["{{dashCase name}}s"],
    queryFn: () => get{{properCase name}}s(),
  });
};
